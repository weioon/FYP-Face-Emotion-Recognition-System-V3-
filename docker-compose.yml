# filepath: docker-compose.yml

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile # Assumes root Dockerfile is for the backend
    ports:
      - "8000:8000" # Expose backend port
    volumes:
      # Mount backend code and necessary files/models
      - ./Backend:/app/Backend
      - ./yolov8n.pt:/app/yolov8n.pt
      # Add other necessary root files/models if backend uses them
      # - ./evaluation_model.py:/app/evaluation_model.py
    env_file:
      - ./Backend/.env # Load backend environment variables
    depends_on:
      - db
    # Ensure the command uses port 8000 if uncommented, or rely on Dockerfile CMD
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Pass the backend service URL during build
        REACT_APP_API_URL: http://backend:8000 # This will be proxied by Nginx
    ports:
      - "80:80"   # Map host port 80 to Nginx container port 80
      - "443:80"  # Map host port 443 to Nginx container port 80 (for potential HTTPS later)
    depends_on:
      - backend # Ensure backend starts before frontend

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./Backend/.env # For POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
    ports:
      - "5432:5432" # Expose PostgreSQL port if direct access is needed

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - ./Backend/.env # For PGADMIN_DEFAULT_EMAIL, PGADMIN_DEFAULT_PASSWORD
    ports:
      - "5050:80" # pgAdmin web interface
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data: